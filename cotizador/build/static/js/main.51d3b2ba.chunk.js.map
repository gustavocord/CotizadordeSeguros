{"version":3,"sources":["components/Header.js","helper.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primerMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","guardarResumen","guardarCargando","useState","marca","year","plan","datos","guardarDatos","error","guardarError","obternerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obternerDiferenciaYear","console","log","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","Number","onChange","type","checked","prototype","PropTypes","func","isRequired","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51d3b2ba.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst  ContenedorHeader = styled.header`\r\n\r\n    background-color : #26C6DA;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst TextoHeader = styled.h1 `\r\n    font-size: 2rem;\r\n    margin:0;\r\n    font-family: 'Slabo 27px', serif;\r\n    text-align: center;\r\n\r\n\r\n`;\r\n\r\nconst Header = ({titulo})=>{\r\n    return(\r\n        <ContenedorHeader>\r\n            <TextoHeader>{titulo}</TextoHeader>\r\n        </ContenedorHeader>\r\n    );\r\n}\r\nHeader.propTypes= {\r\n    titulo: PropTypes.string.isRequired\r\n}\r\nexport default Header;","export function obternerDiferenciaYear(year){\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\n\r\n// calcula el total a pagar segun la marca\r\n\r\nexport function calcularMarca(marca){\r\n    let incremento;\r\n\r\n    switch(marca){\r\n        \r\n        case 'europeo':\r\n            incremento= 1.30;\r\n            break\r\n        case 'americano':\r\n            incremento= 1.15;\r\n            break;\r\n        case 'asiatico':\r\n            incremento= 1.05;\r\n            break;\r\n        \r\n        default:\r\n                break;\r\n    }\r\n    return incremento;\r\n}\r\n\r\n//calcular tipo de seguro\r\n\r\nexport function obtenerPlan(plan){\r\n    return (plan==='basico') ?  1.20 : 1.50; \r\n}\r\n\r\nexport function primerMayuscula(texto){\r\n    return texto.charAt(0).toUpperCase()+ texto.slice(1);\r\n}\r\n","\r\nimport React ,{useState} from 'react';\r\n\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport {obternerDiferenciaYear , calcularMarca , obtenerPlan} from  '../helper';\r\n\r\n\r\n\r\nconst Campo = styled.div`\r\n\r\n    display : flex;\r\n    margin-bottom : 1rem;\r\n    align-items: center ;\r\n\r\n`;\r\n\r\nconst Label = styled.label`\r\nflex : 0 0 100px;\r\n\r\n` ;\r\n\r\nconst Select = styled.select`\r\ndisplay : block;\r\nwidth : 100%;\r\npadding: 1rem;\r\nborder: 1px solid #e1e1e1;\r\n-webkit-appearance : none;\r\n` ;\r\n\r\nconst InputRadio = styled.input`\r\nmargin : 0 1rem;\r\n\r\n` ;\r\n\r\nconst Boton = styled.button`\r\n\r\n    background-color : #00838F;\r\n    font-size: 16px;\r\n    width: 100%;\r\n    padding : 1rem;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    font-weight :bold;\r\n    border: none;\r\n    transition: background-color .3s ease;\r\n    margin-top:2rem;\r\n    &:hover {\r\n        background-color :  #26C6DA;\r\n        cursor: pointer;\r\n    }\r\n\r\n`\r\nconst Error= styled.div`\r\n    background-color: red;\r\n    color : white;\r\n    padding : 1rem;\r\n    width : 100%;\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n\r\n\r\n`;\r\n\r\nconst Formulario = ({guardarResumen ,guardarCargando}) => {\r\n    \r\n    const [ datos, guardarDatos ] = useState({\r\n        marca: '',\r\n        year: '',\r\n        plan: ''\r\n    });\r\n\r\n    const [error, guardarError]= useState(false);\r\n    // extraer valores del state\r\n    const { marca, year, plan } = datos;\r\n    \r\n\r\n    //leer los datos del formulario\r\n    const obternerInformacion =e => {\r\n        guardarDatos({\r\n            ...datos,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    \r\n    //cuando el usuario presiona submit\r\n\r\n    const cotizarSeguro = e => {\r\n        e.preventDefault();\r\n\r\n        if(marca.trim()== ''||year.trim()== ''||plan.trim()== ''){\r\n            guardarError(true);\r\n            return; \r\n        }\r\n        guardarError(false);\r\n        \r\n        // base en 2000\r\n        let resultado =2000;\r\n        //obtener la diferencia de años\r\n\r\n        const diferencia = obternerDiferenciaYear(year);\r\n        console.log(diferencia);\r\n        //por cada año hay que restar  el 3%\r\n        resultado-= ((diferencia*3)*resultado)/100;\r\n        \r\n        resultado= calcularMarca(marca)*resultado;\r\n       \r\n\r\n        const incrementoPlan= obtenerPlan(plan);\r\n        console.log(incrementoPlan);\r\n\r\n        resultado= parseFloat(incrementoPlan*resultado).toFixed(2);\r\n\r\n        guardarCargando(true);\r\n     \r\n        setTimeout(() => {\r\n\r\n            // Elimina el spinner\r\n            guardarCargando(false);\r\n\r\n            // pasa la información al componente principal\r\n            guardarResumen({\r\n                cotizacion: Number(resultado),\r\n                datos\r\n            });\r\n        }, 3000);\r\n\r\n\r\n       \r\n    }\r\n    \r\n    return(\r\n        <form\r\n            onSubmit={cotizarSeguro}\r\n        >\r\n            {error ?<Error>Todos los campos son obligatorios</Error>: null}\r\n            <Campo>\r\n                <Label>Marca</Label>\r\n                <Select\r\n                    name = \"marca\"\r\n                    value={marca}\r\n                    onChange={obternerInformacion}>\r\n                        <option value=\"\">-- Seleccione --</option>\r\n                        <option value=\"americano\">Americano</option>\r\n                        <option value=\"europeo\">Europeo</option>\r\n                        <option value=\"asiatico\">Asiatico</option>\r\n                </Select>\r\n            </Campo>\r\n            <Campo>\r\n                <Label>Año</Label>\r\n                <Select\r\n                    name = \"year\"\r\n                    value={year}\r\n                    onChange={obternerInformacion}\r\n                >\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                    <option value=\"2018\">2018</option>\r\n                    <option value=\"2017\">2017</option>\r\n                    <option value=\"2016\">2016</option>\r\n                    <option value=\"2015\">2015</option>\r\n                    <option value=\"2014\">2014</option>\r\n                    <option value=\"2013\">2013</option>\r\n                    <option value=\"2012\">2012</option>\r\n                </Select>\r\n            </Campo>\r\n\r\n            <Campo>\r\n                <Label>Plan</Label>\r\n                <InputRadio\r\n                    type=\"radio\"\r\n                    name= \"plan\"\r\n                    value=\"basico\"\r\n                    checked={plan===\"basico\"}\r\n                    onChange={obternerInformacion}\r\n                    \r\n                    /> Basico\r\n                 <InputRadio    \r\n                    type=\"radio\"\r\n                    name= \"plan\"\r\n                    value=\"completo\"\r\n                    checked={plan===\"completo\"}\r\n                    onChange={obternerInformacion}\r\n                    /> Completo\r\n            </Campo>\r\n\r\n            <Boton type=\"submit\">Cotizar</Boton>\r\n        </form>\r\n    );\r\n} \r\n\r\nFormulario.prototype={\r\n    guardarCargando: PropTypes.func.isRequired,\r\n    guardarResumen: PropTypes.func.isRequired\r\n}\r\nexport default Formulario;","\r\nimport React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport{primerMayuscula} from '../helper'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ContenedorResumen = styled.div`\r\n    padding: 1rem;\r\n    text-align: center;\r\n    background-color: #00838F;\r\n    color: #FFF;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst Resumen = ({datos }) => {\r\n\r\n    // extraer de datos\r\n    const {marca, year, plan} = datos;\r\n\r\n    if(marca === '' || year === '' || plan === '' ) return null;\r\n\r\n\r\n    return(\r\n        <ContenedorResumen>\r\n             <h2>Resumen de Cotizacion</h2>\r\n                <ul>\r\n                    <li>Marca: {primerMayuscula(marca)} </li>\r\n                    <li>Plan: {primerMayuscula(plan)}</li>\r\n                    <li>Año del Auto: { year} </li>\r\n            </ul>\r\n     </ContenedorResumen>\r\n    );\r\n}\r\n\r\nResumen.propTypes ={\r\n    Datos : PropTypes.object.isRequired\r\n}\r\nexport default Resumen;\r\n\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { TransitionGroup, CSSTransition  } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nconst Mensaje = styled.p`\r\n    background-color: rgb(127, 224, 237);\r\n    margin-top: 2rem;\r\n    padding: 1rem;\r\n    text-align: center;\r\n`;\r\nconst ResultadoCotizacion = styled.div`\r\n    text-align: center;\r\n    padding: .5rem;\r\n    border: 1px solid #26C6DA;\r\n    background-color:  rgb(127, 224, 237);\r\n    margin-top: 1rem;\r\n    position: relative;\r\n`;\r\nconst TextoCotizacion = styled.p`\r\n    color: #00838F;\r\n    padding: 1rem;\r\n    text-transform: uppercase;\r\n    font-weight:bold;\r\n    margin: 0;\r\n`;\r\nconst Resultado =({cotizacion}) => {\r\n    \r\n    \r\n    \r\n    return (\r\n         (cotizacion===0) ? <Mensaje>Elige marca , año y tipo de seguro</Mensaje> \r\n         : \r\n         \r\n            (\r\n                <ResultadoCotizacion>\r\n                <TransitionGroup\r\n                    component=\"span\"\r\n                    className=\"resultado\"\r\n                >\r\n                    <CSSTransition\r\n                        classNames=\"resultado\"\r\n                        key={cotizacion}\r\n                        timeout={{ enter: 500, exit: 500}}\r\n                    >\r\n                        <TextoCotizacion>El total es: $ <span> {cotizacion} </span>  </TextoCotizacion>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            </ResultadoCotizacion>  \r\n            )\r\n    );\r\n\r\n\r\n}\r\n\r\nResultado.propTypes={\r\n    cotizacion: PropTypes.number.isRequired\r\n    \r\n}\r\n\r\nexport default Resultado;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return ( \r\n\r\n        <div className=\"sk-circle\">\r\n            <div className=\"sk-circle1 sk-child\"></div>\r\n            <div className=\"sk-circle2 sk-child\"></div>\r\n            <div className=\"sk-circle3 sk-child\"></div>\r\n            <div className=\"sk-circle4 sk-child\"></div>\r\n            <div className=\"sk-circle5 sk-child\"></div>\r\n            <div className=\"sk-circle6 sk-child\"></div>\r\n            <div className=\"sk-circle7 sk-child\"></div>\r\n            <div className=\"sk-circle8 sk-child\"></div>\r\n            <div className=\"sk-circle9 sk-child\"></div>\r\n            <div className=\"sk-circle10 sk-child\"></div>\r\n            <div className=\"sk-circle11 sk-child\"></div>\r\n            <div className=\"sk-circle12 sk-child\"></div>\r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default Spinner;","\nimport React ,{useState} from 'react';\nimport Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport Resumen from './components/Resumen';\nimport Resultado from './components/Resultado';\nimport Spinner from './components/Spinner';\nimport styled from '@emotion/styled';\n\n\nconst Contenedor = styled.div`\n\n    max-width:600px;\n    margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n\n    background-color:#fff;\n    padding : 3rem;\n\n`\nfunction App (){\n    const [ resumen, guardarResumen] = useState({\n        cotizacion: 0,\n        datos: {\n          marca: '',\n          year: '',\n          plan: ''\n        }\n    });\n    const [ cargando, guardarCargando] = useState(false);\n\n    const {cotizacion , datos}= resumen;\n    \n    return(\n        <Contenedor>\n            <Header\n            titulo='cotizador de seguro'\n            />\n            <ContenedorFormulario>\n                <Formulario\n                guardarResumen={guardarResumen}\n                guardarCargando={guardarCargando}\n            />\n\n            { cargando ? <Spinner /> : null }\n            \n                    <Resumen \n                        datos= {datos}\n                        />\n\n            { !cargando  ?\n                <Resultado \n                  cotizacion={cotizacion}\n                /> : null\n            }\n\n                 \n          \n                \n            </ContenedorFormulario>\n        </Contenedor>\n    );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}